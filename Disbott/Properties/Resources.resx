<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Comand_Lol_SetSummoner" xml:space="preserve">
    <value>Set Summoner -- Links the specified summoner to your discord account // **disbott setsummoner [summoner name]**</value>
    <comment>Lol_Module</comment>
  </data>
  <data name="Command_CoinFlip_Flip" xml:space="preserve">
    <value>Flip -- Flips a coin! // **disbott flip**</value>
    <comment>Coinflip_Module</comment>
  </data>
  <data name="Command_Giphy_Flip" xml:space="preserve">
    <value>Giphy -- Gets a random gif // **disbott giphy [subject]**</value>
    <comment>Giphy_Module</comment>
  </data>
  <data name="Command_Lol_CurrentGame" xml:space="preserve">
    <value>Current Game -- Gets the current game for yourself or another discord/league account // **disbott currentgame [summoner name]**</value>
    <comment>Lol_Module</comment>
  </data>
  <data name="Command_Lol_Ranked" xml:space="preserve">
    <value>Ranked Info -- Gets the ranked stats for yourself or another discord/league account // **disbott ranked [summoner name]**</value>
    <comment>Lol_Module</comment>
  </data>
  <data name="Command_Message_Count_Count" xml:space="preserve">
    <value>Message Count -- Displays Current Message Count for Current or Another Discord User // **disbott messagecount**</value>
    <comment>Message_Count_Module</comment>
  </data>
  <data name="Command_Poll_Current" xml:space="preserve">
    <value>Current Polls -- Gets all the current polls // **disbott currentpolls**</value>
    <comment>Poll_Module</comment>
  </data>
  <data name="Command_Poll_Delete" xml:space="preserve">
    <value>Delete Poll -- Deletes a poll // **disbott deletepoll [Poll ID]**</value>
    <comment>Poll_Module</comment>
  </data>
  <data name="Command_Poll_DeleteAll" xml:space="preserve">
    <value>Delete all Polls (Admin Only) -- Deletes all polls // **disbott deleteallpolls**</value>
    <comment>Poll_Module</comment>
  </data>
  <data name="Command_Poll_NewPoll" xml:space="preserve">
    <value>New Poll -- Starts a new Poll // **disbott newpoll [Date Time] [Poll Title]**</value>
    <comment>Poll_Module</comment>
  </data>
  <data name="Command_Poll_VotePoll" xml:space="preserve">
    <value>Vote Poll -- Votes on a poll // **disbott votepoll [Poll ID] [yes/no]**</value>
    <comment>Poll_Module</comment>
  </data>
  <data name="Command_Quotes_AddQuote" xml:space="preserve">
    <value>Add Quote -- Adds a new quote // **disbott addquote [Username] [Quote]**</value>
    <comment>Quotes_Module</comment>
  </data>
  <data name="Command_Quote_Delete" xml:space="preserve">
    <value>Delete Quote -- Removes quote from a person // **disbott deletequote [Quote]**</value>
    <comment>Quotes_Module</comment>
  </data>
  <data name="Command_Quote_Quote" xml:space="preserve">
    <value>Quote -- Randomly quotes a user // **disbott quote [username]**</value>
    <comment>Quotes_Module</comment>
  </data>
  <data name="Command_Remindme_AdDeleteReminder" xml:space="preserve">
    <value>Admin Delete Reminder (Admin Only)-- Deletes a Reminder  // **disbott admindeletereminder [Reminder ID]**</value>
    <comment>Remind_Me_Module</comment>
  </data>
  <data name="Command_Remindme_AllReminders" xml:space="preserve">
    <value>All Reminders (Admin Only) -- Show all the current reminders // **disbott allreminders**</value>
    <comment>Remind_Me_Module</comment>
  </data>
  <data name="Command_Remindme_DeleteReminder" xml:space="preserve">
    <value>Delete Reminder -- Deletes one of your current reminders // **disbott deletereminder [Reminder ID]**</value>
    <comment>Remind_Me_Module</comment>
  </data>
  <data name="Command_Remindme_MyReminders" xml:space="preserve">
    <value>My Reminders -- Show your current reminders // **disbott myreminders**</value>
    <comment>Remind_Me_Module</comment>
  </data>
  <data name="Command_Remindme_RemindIn" xml:space="preserve">
    <value>Remind Me In -- Reminds a user something in a set amount of time // **disbott remindmein [h] [m] [s] [Reminder]**</value>
    <comment>Remind_Me_Module</comment>
  </data>
  <data name="Command_Remindme_RemindInAll" xml:space="preserve">
    <value>Remind All In (Admin Only) -- Reminds all users something in a set amount of time // **disbott remindallin [h] [m] [s] [Reminder]**</value>
    <comment>Remind_Me_Module</comment>
  </data>
  <data name="Command_Remindme_RemindThen" xml:space="preserve">
    <value>Remind Me Then -- Reminds a user something at a set time // **disbott remindmethen [Date/Time] [Reminder]**</value>
    <comment>Remind_Me_Module</comment>
  </data>
  <data name="Command_Remindme_RemindThenAll" xml:space="preserve">
    <value>Remind All Then (Admin Only) --  Reminds all users something at a set time // **disbott remindallthen [Date/Time] [Reminder]**</value>
    <comment>Remind_Me_Module</comment>
  </data>
  <data name="Command_Roll_Roll" xml:space="preserve">
    <value>Roll Dice -- Rolls a dice // **disbott roll [xdy](Where x is number and y is sides)**</value>
    <comment>Roll_Module</comment>
  </data>
  <data name="Command_Twitter_gazo" xml:space="preserve">
    <value>Gazo Tweet -- NSFW, gets a random image from the last 40 tweets on @idol_gazo twitter account // **disbott gazo**</value>
    <comment>Twitter_Module</comment>
  </data>
  <data name="Command_Twitter_Headline" xml:space="preserve">
    <value>Get Headline -- Gets the latest tweet from The Guardian's Twitter Account // **disbott headline**</value>
    <comment>Twitter_Module</comment>
  </data>
  <data name="Command_Twitter_RandomTweet" xml:space="preserve">
    <value>Get Random Tweet -- Gets a random tweet in the last 40 for a user // **disbott randomtweet [Twitter name]**</value>
    <comment>Twitter_Module</comment>
  </data>
  <data name="Command_Twitter_Tweet" xml:space="preserve">
    <value>Get Tweet -- Gets the last tweet from a user // **disbott tweet [Twitter Name]**</value>
    <comment>Twitter_Module</comment>
  </data>
  <data name="Command_Utils_About" xml:space="preserve">
    <value>About -- Tells the user about Disbott and its creators // **disbott about**</value>
    <comment>Utils_Module</comment>
  </data>
  <data name="Command_Utils_Help" xml:space="preserve">
    <value>Help -- Gives explanation for all disbott commands // **disbott help [Module Name]**</value>
    <comment>Utils_Module</comment>
  </data>
  <data name="Command_Utils_Info" xml:space="preserve">
    <value>Info -- Tells user the current Disbott info // **disbott info**</value>
    <comment>Utils_Module</comment>
  </data>
  <data name="Command_Utils_Kill" xml:space="preserve">
    <value>Kill (Admin Only)-- Ruthlessly murders disbott // **disbott kill**</value>
    <comment>Utils_Module</comment>
  </data>
  <data name="Command_Utils_Modules" xml:space="preserve">
    <value>Modules -- Lists all the current disbott modules // **disbott modules**</value>
    <comment>Utils_Module</comment>
  </data>
  <data name="Command_Utils_Ping" xml:space="preserve">
    <value>Ping -- Checks disbott is alive // **disbott ping**</value>
    <comment>Utils_Module</comment>
  </data>
  <data name="Desc_Coinflip" xml:space="preserve">
    <value>**coinflip:** commands to flip a coin</value>
    <comment>Coin_Flip_Module</comment>
  </data>
  <data name="Desc_Giphy" xml:space="preserve">
    <value>**giphy:** commands to get Gifs from giphy</value>
    <comment>Giphy_Module</comment>
  </data>
  <data name="Desc_Lol" xml:space="preserve">
    <value>**leagueoflegends:** commands to get information about League of Legends accounts</value>
    <comment>Lol_Module</comment>
  </data>
  <data name="Desc_Message_Count" xml:space="preserve">
    <value>**messagecount:** commands to get message count on a user</value>
    <comment>Message_Count_Module</comment>
  </data>
  <data name="Desc_Poll" xml:space="preserve">
    <value>**polls:** commands to run a poll</value>
    <comment>Poll_Module</comment>
  </data>
  <data name="Desc_Quotes" xml:space="preserve">
    <value>**quotes:** commands to add quotes for a user</value>
    <comment>Quotes_Module</comment>
  </data>
  <data name="Desc_Remind_Me" xml:space="preserve">
    <value>**reminders:** commands to set timed reminders</value>
    <comment>Remind_Me_Module</comment>
  </data>
  <data name="Desc_Roll" xml:space="preserve">
    <value>**diceroll:** commands to roll a dice</value>
    <comment>Roll_module</comment>
  </data>
  <data name="Desc_Twitter" xml:space="preserve">
    <value>**twitter:** commands to get tweets from accounts</value>
    <comment>Twitter_Module</comment>
  </data>
  <data name="Desc_Utils" xml:space="preserve">
    <value>**utils:** commands to deal with utilities on disbott</value>
    <comment>Utils_Module</comment>
  </data>
  <data name="error_Cant_Add_Quote" xml:space="preserve">
    <value>Could not add quote</value>
    <comment>Quote_Module</comment>
  </data>
  <data name="error_Could_Not_Delete" xml:space="preserve">
    <value>Could not delete quote</value>
    <comment>Quote_Module</comment>
  </data>
  <data name="error_Incorrect_Format_Dice" xml:space="preserve">
    <value>Invalid Input. Roll a dice by using the format 'xdy'</value>
    <comment>Dice_Roll_Module</comment>
  </data>
  <data name="error_Incorrect_Format_Poll" xml:space="preserve">
    <value>Please type 'yes' or 'no'</value>
    <comment>Poll_Module</comment>
  </data>
  <data name="error_No_Messages" xml:space="preserve">
    <value>Wow, this user has posted no messages, incredible lurking</value>
    <comment>Message_Count_Module</comment>
  </data>
  <data name="error_OneSide_Dice" xml:space="preserve">
    <value>Grats you rolled a d1, hope you are proud</value>
    <comment>Dice_Roll_Module</comment>
  </data>
  <data name="error_Too_Many_Dice" xml:space="preserve">
    <value>To avoid spam you cannot roll more than 100 dice or a d100 (Sorry)</value>
    <comment>Dice_Roll_Module</comment>
  </data>
  <data name="error_User_No_Quotes" xml:space="preserve">
    <value>{0} has no quotes</value>
    <comment>Quote_Module</comment>
  </data>
  <data name="response_About" xml:space="preserve">
    <value>Hello, I\'m Disbott. A bot for Discord. Find out more about me here {0}</value>
    <comment>General</comment>
  </data>
  <data name="response_Added_Quote" xml:space="preserve">
    <value>Added quote for {0} saying, {1}</value>
    <comment>Quote_Module</comment>
  </data>
  <data name="response_Deleted_Quote" xml:space="preserve">
    <value>Deleted quote {0}</value>
    <comment>Quote_Module</comment>
  </data>
  <data name="response_Dice_Roll" xml:space="preserve">
    <value>{0} Rolled:
{1}
Total: {2}</value>
    <comment>Dice_Roll_Module</comment>
  </data>
  <data name="response_Info_Dev" xml:space="preserve">
    <value>Disbott C# Edition, Dev Version -- {0}</value>
    <comment>General</comment>
  </data>
  <data name="response_Info_Live" xml:space="preserve">
    <value>Disbott C# Edition, Version 3.0.0 -- {0}</value>
    <comment>Geneal</comment>
  </data>
  <data name="response_Killed" xml:space="preserve">
    <value>I have been killed, brb</value>
    <comment>General</comment>
  </data>
  <data name="response_Linked_LolAccount" xml:space="preserve">
    <value>You have now linked {0} to your Discord Account</value>
    <comment>Lol_Module</comment>
  </data>
  <data name="response_Pong" xml:space="preserve">
    <value>Pong</value>
    <comment>General</comment>
  </data>
  <data name="response_Random_Quote" xml:space="preserve">
    <value>{0} said {1}</value>
    <comment>Quote_Module</comment>
  </data>
  <data name="response_Total_Messages" xml:space="preserve">
    <value>{0} has posted {1} messages</value>
    <comment>Message_Count_Module</comment>
  </data>
  <data name="response_Twitter_User" xml:space="preserve">
    <value>{0}: {1}</value>
    <comment>Twitter_Module</comment>
  </data>
  <data name="url_Disbott" xml:space="preserve">
    <value>https://github.com/uchuuio/disbott/</value>
    <comment>General</comment>
  </data>
</root>